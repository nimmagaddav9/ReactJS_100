100 React JS Interview Q & A

React Basics-1
Q1. What is React? What is the Role of React in software development?
React is open source Javascript Library.
React is used for building user interfaces(UI).
React Simplifies the creation of SPA by using reusable components.

Q2 what are the key Features of React?
7 key features:
1. Virtual DOM
2. Component based architecture
3. Reusability & Composition
4. JSX (Javascript XML)
5. Declarative Syntax
6. Community & Ecosystem
7. React Hooks.
Virtual DOM: React utilizes a virtual representation of the DOM, allowing efficient updates by minimizing direct manipulation of the actual DOM, resulting in improved performance.

Component-Based Architecture: React structures user interfaces as modular, reusable components, promoting a more maintainable and scalable approach to building applications.

Reusability & Composition: React enables the creation of reusable components that can be composed together, fostering a modular and efficient development process.

JSX(JavaScript XML): JSX is a syntax extension for JavaScript used in React, allowing developers to write HTML like code within JavaScript, enhancing readbility and maintainability.

Declarative Syntax: React have a declarative programming style(JSX), where developers focus on "what" the UI should like and React handles the "how" behind the scenes. This simplify the code.

Community & Ecosystem: React benifits from a vibrant and extensive community, contributing to a rich ecosystem of libraries, tools and resources, fostering collaborative development and innovation.

React Hooks: Hooks are functions that enable functional components to manage state and lifecycle features, providing a more concise and expressive way to handle component logic.



Q3 what is DOM? What is the difference between HTML & DOM?

DOM(Document Object Model) represents the web page as a tree-like structure which allows Javscript to dynamically access and manipulate the content and structure of a web page.


Q4 What is virtual DOM ? Difference between DOM & Virtual DOM?

React uses a virtual DOM to efficently update the UI without re-render the entire page, which helps improve performance and make the application more responsive.

Reconciliation (React Libraries)

DOM                                                 Virtual DOM
1. DOM is actual representation of the webpage.      1. Virtual DOM is lightweight copy of the DOM.
2. Re-renders the entire page when updates occur.    2. Re-render only the changed parts efficently.
3. Can be slower, especially with frequent updates.  3. Optimized for faster rendering.
4. Suitable for static websites and simple applications 4. ideal for dynamic and complex single-page applications with frequent updates.


Q5 What are React Components? What are the main elements of it?

In React, a component is a reusable building block for creating user interfaces.

//1. Import the React Library
import React from "react";

2. Define a functional component
function Component(){
    //3. Return JSX to describe the component's UI
    return(
        <div>
            <h1>i am a react reusable component</h1>
        </div>
    );
}
//4. Import the component to make it available
//for use in other files
export default component;

Q6 What is SPA (Single Page Application)?

A Single Page Application(SPA) is a web application that have only one single web page.
whenever user do some action on the website, then in response content is dynamically updated without refreshing or loading a new page.

Q7 What are the 5 advantages of React?

1. Simple to build Single Page Application(by using Components - component based architecture).
2. React is cross platform and open source(Free to use)
3. Lightweight and very fast(Virtual DOM)
4. Large Community and Ecosystem.
5. Testing is easy.

Q8 What are the disadvantages of React?
React is not a good choice for very small applications.

Q9 What is the role of JSX in React? (3 points)

1. JSX stands for JavaScript XML.
2. JSX is used by React to write HTML-Like code.
3. JSX is converted to Javscript via tools like Babel.(Because browsers understand JavaScript not JSX.)


Q10 what is the difference between Declarative & Imperative Syntax?

Declarative                                                         
1. Declarative syntax focuses on describing the desired result without specifying the step-by-step process.
2. JSX in React is used to write declarative syntax.

Imperative
1. Imperative syntax involves step by step process to achieve a particular goal.
2. Javascript has an imperative syntax.

React Basics-2 
Q11 What is Arrow Function Expression in JSX?

The arrow function expression syntax is a concise way of defining functions.

//Arrow function Expression
const ArrowFunc = (props) => {
    return (
        <div>
            <h1>{props.name}</h1>
        </div>
    );
};

export default ArrowFunc;


Q12 How to Setup React first project?

1. Install Node.js from link. nodejs.org

2. Install code editor for writing the code. VS Code link --> download

3.  Open VS Code --> terminal --> npx create-react-app my-app --> takes 5-6 minutes

4. VS code --> file --> open folder --> MY-APP --> open terminal --> npm start


Q13 What are the Main files in React project?

        Request    
Browser  ---->      index.html --> Single Page

                       ^ >        
          <-----      index.js--> entry point(JS)
        Display             ^
comp1.js, comp2.js, comp3.js -----App.js ==> Root Component

Q14 How React app Load & display the components in browser?

index.html --> Single page which loads index.js by React libraries.

index.js --> Replace root element of index.html file by App component

App.js --> Root Component which is the container of all the child components.

child component.js --> custom child components placed over app component.


Q15 What is the difference between React & Angular?

React                                                                   Angular
React and Angular both are used to create single page UI applications using components.
1. React is a Javascript Library.                                   1. Angular is a complete Framework.
2. React uses virtual DOM which makes it faster.                    2. Angular uses a real DOM.
3. React is smaller in sixe and lightwight and therefore faster sometime.  3. Angular is bigger because it is a complete framework.
4. React depends on external libraries for many complex features, so      4. Since Angular is a complete framework, therfore it provide built-in support for features like routing, forms, validation and HTTP requests.
developer has to write many lines of code for complex functionalities

5. React is simple to learn and more popular than Angular.              5. Angular is slightly difficult to learn as it has Typescipt, OOPS concept and many more thing.


Q16 What are the other 5 JS frameworks other than React?

Angular
Vue.js
AngularJS
Backbone.js
Ember.js

Q17 Whether React is Framework or Library? what is the difference?

Library: Developers import the libraties at the top and then used it functions in components.
React is commonly reffered to as a Javscript Library

Framework: Developers need to follow a specific structure or pattern defined by the framework.
Angular is a framework.

@Component({
    selector:'app-root',
    templateUrl: './app.component.html',
    styleUrls:['./app.component.css']
})
export class AppComponent{
    title = "Hello World";
}


Q18 How React provide Reusability & Composition?
React provides Reusability and Composition through its component-based architecture.
Reusability: once you create a component, you can re-use it in different parts of your application or even in multiple projects.
Composition: Composition is creating new and big components by Components by combining existing small components. Its advantage is, change to one small component will not impact other components.


Q19 What are State, Stateless, Stateful and state management teams?

"State" refers to the current data of the component.

Stateful or state management means when a user performs some actions on the UI, then the React application should be able to update and re-render the data or state on the UI.


Q20 What are Props in JSX?
Props(properties) are way to pass data from a parent component to a child component.

React Basics-3 
Q21 What is NPM? What is the role of node_module folder?
NPM(Node Package Manager) is used to manage dependencies for your React project, including the React Library itself.

node_modules folder contains all the dependencies of the project, including the React libraries.



Q22 What is the role of public folder in React?
Public folder contains static assets that are served directly to the user's browser, such as images, fonts, and the index.html file.



Q23 What is the role of src folder in React?

src folder is used to store all the source code of the application which is then responsible for the dynamic changes in your web application.


Q24 What is the role of index.html page in React?

index.html file is the main HTML file(SPA) in React application.
here the div with id="root" will be replaced by the component inside index.js file.


Q25 What is the role of index.js file & ReactDOM in React?

ReactDOM is a Javascript library that renders components to the DOM or browser.

The index.js file is the javascript file that replaces the root element of the index.html file with the newly rendered components.


Q26 What is the role of App.js file in React?
Q27 56:52 What is the role of function & return inside 
App.js?
Q28 58:43 Can we have function without a return inside 
App.js?
Q29 1:00:28 What is the role of export default inside 
App.js?
Q30 1:01:25 Does the file name & component name must be 
same in React?
React -4 JSX - 1:02:04
Q31 1:02:48 What is the role of JSX in React?
Q32 1:04:56 What are the 5 Advantages of JSX?
Q33 1:07:15 What is Babel?
Q34 1:08:29 What is the role of Fragment in JSX?
Q35 1:10:35 What is Spread Operator in JSX?
Q36 1:11:55 What are the types of Conditional Rendering 
in JSX?
Q37 1:14:50 How do you iterate over a list in JSX? What 
is map() method?
Q38 1:17:39 Can a browser read a JSX file?
Q39 1:18:01 What is Transpiler? What is the difference 
between Compiler & Transpiler?
Q40 1:19:26 Is it possible to use JSX without React?
React- 5 Components-Functional/Class 1:19:57
Q41 1:20:47 What are React Components ? what are the main 
elements of it?
Q42 1:22:38 What are the Types of React Components? What 
are Functional Components?
Q43 1:23:41 How do you pass data between functional 
components in React?
Q44 1:23:58 What is Prop Drilling in React?
Q45 1:25:06 Why to Avoid Prop Drilling? In how many ways 
avoid Prop Drilling?
Q46 1:27:36 What are class components in React?
Q47 1:29:18 How to pass data between class components in 
React?
Q48 1:30:30 What is the role of this keyword in class 
components?
Q49 1:32:05 What are the 5 differences btw Functional 
components & class components? 
React- 6 Routing 1:34:09
Q50 1:34:43 What is Routing and Router in React?
Q51 1:36:02 How to implement Routing in React?
Q52 1:37:47 What are the roles of <Routes> & <Route> 
component in React Routing?
Q53 1:39:12 What are Route Parameters in React Routing?
Q54 1:39:52 What is the role of Switch Component in React 
Routing?
Q55 1:41:05 What is the role of exact prop in React 
Routing?
React- 7 Hooks -useState/useEffect 1:42:04
Q56 1:42:39 What are React Hooks? What are the Top React 
Hooks?
Q57 1:44:32 What are State, Stateless, Stateful and State 
Management terms?
Q58 1:47:39 What is the role of useState() hook and how 
it works?
Q59 1:52:08 What is the role of useEffect(). How it works 
& what is its use?
Q60 1:56:13 What is Dependency Array in useEffect() hook?
Q61 1:58:25 What is the meaning of the empty array[] in 
the useEffect()?
React- 8 Hooks -useContext/useReducer 1:59:12
Q62 1:59:53 What is the role of useContaxt() hook?
Q63 2:02:40 What is createContext() method? what are 
Provider & Consumer Properties?
Q64 2:03:59 When to use useContext hook instead of props 
in real application?
*** No Answer *** 
Q65 what are the similarities between useState() & 
useReducer() hook?
Q66 what is useReducer() hook? When to use useState() & 
when useReducer()?
Q67 What are the differences between useState() & 
useReducer() hook?
Q68 What are dispatch & reducer function in useReducer 
hook?
Q69 What is the purpose of passing initial state as an 
object in useReducer?
*** React 9 & 10 topics missing ****
React- 11 Component LifeCycle Method-1 2:05:24
Q70 2:06:12 What are component life cycle phases?
Q71 2:08:03 What are component life cycle methods?
Q73 2:09:55 What are constructors in class components ? 
when to use them?
Q74 2:12:13 What is the role of super keyword in 
constructor?
Q75 2:13:31 what is the role of render() method in 
component life cycle?
Q76 2:15:30 How the state can be maintained in a class 
component?
Q77 2:17:27 What is the role of componentDidMount() 
method in component life cycle?
*** React 12 topics missing ****
React- 13 Controlled & Uncontrolled Components 2:20:39
Q78 2:20:53 What are controlled components in React?
Q79 2:23:17 What are the differences btw Controlled & 
Uncontrolled components?
Q80 2:25:18 What are characteristics of controlled 
components?
Q81 2:26:41 What are the advantages of using controlled 
components in React forms?
Q82 2:28:41 How to handle forms in React?
Q83 2:28:55 How can you handle multiple input fields in a 
controlled form?
Q84 2:29:11 How do you handle form validation in a 
controlled component?
Q85 2:29:43 In what scenarios might using uncontrolled 
components be advantageous?
*** React- 14 Code Splitting 2:30:13
Q86 2:30:50 What is code splitting in React?
Q87 2:32:45 How to implement code splitting in React?
Q88 2:35:58 What is the role of Lazy & Suspense methods 
in React?
Q89 2:38:07 What are the Pros & Cons of code splitting?
Q90 2:41:39 What is the role of the import function in 
code splitting?
Q91 2:42:06 What is the purpose of the fallback prop in 
suspense?
Q92 2:42:32 Can you dynamically load css files using code 
splitting in React?
Q93 2:42:55 How do you inspect & analyze the generated 
chunks in React application?
*** React- 15 Others
Q94 2:43:58 What is a higher-order component in React?
Q95 2:47:03 What are the 5 Ways to Style React components 
? Explain inline styles?
Q96 2:48:18 What are the difference between React & React 
Native?
Q97 2:49:38 What is GraphQL?
Q98 2:50:45 What are the Top 3 ways to achieve state 
management? when to use what in React?
Q99 2:53:34 How can you implement authentication in a 
React application?
Q100 2:56:23 What is the use of React Profiler?
Q101 2:57:49 What is the difference between Fetch & Axios 
for API calls in React?
Q102 3:00:34 What are the popular Testing Libraries for 
React?
Q103 3:00:58 How can you Optimize Performance in React 
application?
Q104 3:03:13 Explain Reactive Programming with example?
Q105 In how many ways can we implement Reactive Programming in React?
Q106 How to pass data from child component to parent component in React?